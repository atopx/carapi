package model

const DocGoFile = `// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = ` + `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "contact": {
            "name": "yanmengfei",
            "email": "3940422@qq.com"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ping": {
            "get": {
                "description": "服务连通性测试接口",
                "tags": [
                    "测试"
                ],
                "summary": "服务连通性测试",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "schemas.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "错误消息",
                    "type": "string"
                },
                "status": {
                    "description": "状态",
                    "type": "boolean"
                }
            }
        },
        "schemas.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "响应数据体",
                    "type": "object"
                },
                "status": {
                    "description": "请求状态",
                    "type": "boolean"
                }
            }
        }
    }
}` + `

type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "",
	BasePath:    "",
	Schemes:     []string{},
	Title:       "ginhelper",
	Description: "ginhelper",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
`

const DocSwaggerJsonFile = `{
    "swagger": "2.0",
    "info": {
        "description": "ginhelper",
        "title": "ginhelper",
        "contact": {
            "name": "yanmengfei",
            "email": "3940422@qq.com"
        },
        "version": "1.0"
    },
    "paths": {
        "/ping": {
            "get": {
                "description": "服务连通性测试接口",
                "tags": [
                    "测试"
                ],
                "summary": "服务连通性测试",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schemas.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schemas.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "schemas.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "description": "错误消息",
                    "type": "string"
                },
                "status": {
                    "description": "状态",
                    "type": "boolean"
                }
            }
        },
        "schemas.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "description": "响应数据体",
                    "type": "object"
                },
                "status": {
                    "description": "请求状态",
                    "type": "boolean"
                }
            }
        }
    }
}`

const DocSwaggerYamlFile = `definitions:
  schemas.ErrorResponse:
    properties:
	  message:
	    description: 错误消息
	    type: string
	  status:
	    description: 状态
	    type: boolean
    type: object
  schemas.SuccessResponse:
    properties:
	  data:
	    description: 响应数据体
	    type: object
	  status:
	    description: 请求状态
	    type: boolean
    type: object
info:
  contact:
    email: 3940422@qq.com
    name: yanmengfei
  description: ginhelper
  title: ginhelper
  version: "1.0"
paths:
  /ping:
    get:
	  description: 服务连通性测试接口
	  responses:
	    "200":
		  description: OK
		  schema:
		    $ref: '#/definitions/schemas.SuccessResponse'
	    "400":
		  description: Bad Request
		  schema:
		    $ref: '#/definitions/schemas.ErrorResponse'
	  summary: 服务连通性测试
	  tags:
	    - 测试
swagger: "2.0"
`
