package model

const DocGoFile = `// GENERATED BY THE COMMAND ABOVE; DO NOT EDIT
// This file was generated by swaggo/swag

package docs

import (
	"bytes"
	"encoding/json"
	"strings"

	"github.com/alecthomas/template"
	"github.com/swaggo/swag"
)

var doc = ` + "`" + `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{.Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "yanmengfei",
            "email": "3940422@qq.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/ping": {
            "get": {
                "description": "服务连通性测试接口",
                "tags": [
                    "测试"
                ],
                "summary": "服务连通性测试",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/task/create": {
            "post": {
                "description": "新建任务",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "任务管理"
                ],
                "summary": "新建",
                "parameters": [
                    {
                        "description": "请求参数,字段说明点击model",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.TaskCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/task/delete": {
            "delete": {
                "description": "删除任务",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "任务管理"
                ],
                "summary": "删除",
                "parameters": [
                    {
                        "description": "请求参数,字段说明点击",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.TaskIDSchema"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/task/done": {
            "patch": {
                "description": "标记任务完成",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "任务管理"
                ],
                "summary": "完成",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "任务id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/task/list": {
            "get": {
                "description": "查询任务列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "任务管理"
                ],
                "summary": "列表",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "请求页",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "请求数",
                        "name": "size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "标题模糊搜索",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/task/start": {
            "patch": {
                "description": "标记任务开始",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "任务管理"
                ],
                "summary": "开始",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "任务id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "schema.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "schema.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "schema.TaskCreate": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "title": {
                    "type": "string"
                }
            }
        },
        "schema.TaskIDSchema": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        }
    }
}` + "`" + `
type swaggerInfo struct {
	Version     string
	Host        string
	BasePath    string
	Schemes     []string
	Title       string
	Description string
}

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = swaggerInfo{
	Version:     "1.0",
	Host:        "localhost:9000",
	BasePath:    "/",
	Schemes:     []string{},
	Title:       "carapi Example",
	Description: "This is a sample swagger for carapi",
}

type s struct{}

func (s *s) ReadDoc() string {
	sInfo := SwaggerInfo
	sInfo.Description = strings.Replace(sInfo.Description, "\n", "\\n", -1)

	t, err := template.New("swagger_info").Funcs(template.FuncMap{
		"marshal": func(v interface{}) string {
			a, _ := json.Marshal(v)
			return string(a)
		},
	}).Parse(doc)
	if err != nil {
		return doc
	}

	var tpl bytes.Buffer
	if err := t.Execute(&tpl, sInfo); err != nil {
		return doc
	}

	return tpl.String()
}

func init() {
	swag.Register(swag.Name, &s{})
}
`

const DocSwaggerJsonFile = `{
    "swagger": "2.0",
    "info": {
        "description": "This is a sample swagger for carapi",
        "title": "carapi Example",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "yanmengfei",
            "email": "3940422@qq.com"
        },
        "license": {
            "name": "Apache 2.0",
            "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
        },
        "version": "1.0"
    },
    "host": "localhost:9000",
    "basePath": "/",
    "paths": {
        "/ping": {
            "get": {
                "description": "服务连通性测试接口",
                "tags": [
                    "测试"
                ],
                "summary": "服务连通性测试",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/task/create": {
            "post": {
                "description": "新建任务",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "任务管理"
                ],
                "summary": "新建",
                "parameters": [
                    {
                        "description": "请求参数,字段说明点击model",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.TaskCreate"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/task/delete": {
            "delete": {
                "description": "删除任务",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "任务管理"
                ],
                "summary": "删除",
                "parameters": [
                    {
                        "description": "请求参数,字段说明点击model",
                        "name": "param",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/schema.TaskIDSchema"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/task/done": {
            "patch": {
                "description": "标记任务完成",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "任务管理"
                ],
                "summary": "完成",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "任务id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/task/list": {
            "get": {
                "description": "查询任务列表",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "任务管理"
                ],
                "summary": "列表",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "请求页",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "maximum": 50,
                        "minimum": 1,
                        "type": "integer",
                        "default": 10,
                        "description": "请求数",
                        "name": "size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "标题模糊搜索",
                        "name": "title",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/task/start": {
            "patch": {
                "description": "标记任务开始",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "任务管理"
                ],
                "summary": "开始",
                "parameters": [
                    {
                        "minimum": 1,
                        "type": "integer",
                        "default": 1,
                        "description": "任务id",
                        "name": "id",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/schema.SuccessResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/schema.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "schema.ErrorResponse": {
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "schema.SuccessResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "object"
                },
                "status": {
                    "type": "boolean"
                }
            }
        },
        "schema.TaskCreate": {
            "type": "object",
            "required": [
                "title"
            ],
            "properties": {
                "title": {
                    "type": "string"
                }
            }
        },
        "schema.TaskIDSchema": {
            "type": "object",
            "required": [
                "id"
            ],
            "properties": {
                "id": {
                    "type": "integer"
                }
            }
        }
    }
}`

const DocSwaggerYamlFile = `basePath: /
definitions:
  schema.ErrorResponse:
    properties:
      message:
        type: string
      status:
        type: boolean
    type: object
  schema.SuccessResponse:
    properties:
      data:
        type: object
      status:
        type: boolean
    type: object
  schema.TaskCreate:
    properties:
      title:
        type: string
    required:
    - title
    type: object
  schema.TaskIDSchema:
    properties:
      id:
        type: integer
    required:
    - id
    type: object
host: localhost:9000
info:
  contact:
    email: 3940422@qq.com
    name: yanmengfei
  description: This is a sample swagger for carapi
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: carapi Example
  version: "1.0"
paths:
  /ping:
    get:
      description: 服务连通性测试接口
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schema.ErrorResponse'
      summary: 服务连通性测试
      tags:
      - 测试
  /task/create:
    post:
      consumes:
      - application/json
      description: 新建任务
      parameters:
      - description: 请求参数,字段说明点击model
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/schema.TaskCreate'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schema.ErrorResponse'
      summary: 新建
      tags:
      - 任务管理
  /task/delete:
    delete:
      consumes:
      - application/json
      description: 删除任务
      parameters:
      - description: 请求参数,字段说明点击model
        in: body
        name: param
        required: true
        schema:
          $ref: '#/definitions/schema.TaskIDSchema'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schema.ErrorResponse'
      summary: 删除
      tags:
      - 任务管理
  /task/done:
    patch:
      consumes:
      - application/json
      description: 标记任务完成
      parameters:
      - default: 1
        description: 任务id
        in: query
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schema.ErrorResponse'
      summary: 完成
      tags:
      - 任务管理
  /task/list:
    get:
      consumes:
      - application/json
      description: 查询任务列表
      parameters:
      - default: 1
        description: 请求页
        in: query
        minimum: 1
        name: page
        required: true
        type: integer
      - default: 10
        description: 请求数
        in: query
        maximum: 50
        minimum: 1
        name: size
        required: true
        type: integer
      - description: 标题模糊搜索
        in: query
        name: title
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schema.ErrorResponse'
      summary: 列表
      tags:
      - 任务管理
  /task/start:
    patch:
      consumes:
      - application/json
      description: 标记任务开始
      parameters:
      - default: 1
        description: 任务id
        in: query
        minimum: 1
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/schema.SuccessResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/schema.ErrorResponse'
      summary: 开始
      tags:
      - 任务管理
swagger: "2.0"
`
